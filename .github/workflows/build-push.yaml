# Build Docker image and push to digitalocean private registry
name: Build Image and Push to private registry

on:
  workflow_call:
    inputs:
      ENVIRONMENT:
        required: true
        type: string

jobs:

  build:

    name: Build and push Docker image
    runs-on: ubuntu-22.04
    environment: ${{ inputs.ENVIRONMENT }}

    steps:

    - name: Checkout
      uses: actions/checkout@v4
    
    # app name stored in ${{ steps.package.outputs.name }}"
    # app version stored in ${{ steps.package.outputs.version }}"
    - name: Get App name and version for use in image build 
      id: package
      uses: codex-team/action-nodejs-package-info@v1.1

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Install doctl
      uses: digitalocean/action-doctl@v2
      with:
        token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

    - name: Log in to DigitalOcean Container Registry with short-lived credentials
      run: doctl registry login --expiry-seconds 600

    - name: Build and push
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./Dockerfile.prod
        push: true
        tags: ${{ vars.DIGITALOCEAN_REGISTRY }}/${{ steps.package.outputs.name }}-image:${{ steps.package.outputs.version }}
        secrets: |
          'APP_NAME=${{ vars.APP_NAME }}'
          'DISCORD_BOT_TOKEN=${{ secrets.DISCORD_BOT_TOKEN }}'
          'DISCORD_BOT_PUBLIC_KEY=${{ secrets.DISCORD_BOT_PUBLIC_KEY }}'
          'DISCORD_BOT_APPLICATION_ID=${{ secrets.DISCORD_BOT_APPLICATION_ID }}'
          'MONGODB_PREFIX=${{ vars.MONGODB_PREFIX }}'
          'MONGODB_USERNAME=${{ secrets.MONGODB_USERNAME }}'
          'MONGODB_PASS=${{ secrets.MONGODB_PASS }}'
          'MONGODB_CLUSTER=${{ secrets.MONGODB_CLUSTER }}'
          'SENTRY_IO_DSN=${{ secrets.SENTRY_IO_DSN }}'